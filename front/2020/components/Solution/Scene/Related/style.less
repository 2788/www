@import '~utils/less/index.less';
@card-height: 252px;

.row {
  display: flex;
  margin-top: 12px;
  height: 36px;

  &:first-child {
    margin-top: 0;
  }

  .mobile({
    height: 48px;
  });
}

.itemWrapper {
  flex: 1;
  display: flex;
  align-items: center;
  margin-left: 12px;
  padding: 0 8px;
  background: @grey-2;
  .withColor(@grey-7);

  &:hover{
    .withColor(@blue-6);

    .rightIcon{
      color: @blue-6;
    }
  }

  .mobile({
    margin-left: 0;
    padding: 0 12px;
    background: @grey-1;
  });

  &:first-child {
    margin-left: 0;
  }

  .iconContainer {
    flex: 0 0 16px;
    display: flex;
    align-items: center;
    height: 100%;

    svg {
      width: 100%;
      height: 100%;
    }
  }

  .content {
    flex: 1;
    margin-left: 8px;
    font-size: 12px;

    .mobile({
      margin-left: 12px;
      font-size: 14px;
    });
  }
}

.invisible {
  visibility: hidden;
}

.rightIcon{
  color: @grey-4;
}

.withColor(@color) {
  color: @color;

  .iconContainer {
    svg {

      // todo:svg 设置颜色分为两种，分别为 stroke 和 fill，一般只会用到其中一种
      // 所以这边分别针对具有 stroke、fill 属性的元素，将颜色改为期望的颜色
      // 以后如果有 stroke、fill 混用或者其他问题，可考虑将 svg 中颜色使用变量来实现
      path,
      circle,
      use,
      polygon {

        // todo：如果后期改为使用自定义属性，如 data-type="type"，此时可能存在被 svgo 干掉的问题
        // 这是因为 svgo 默认开了 removeUnknownsAndDefaults，此时可考虑关闭 removeUnknownsAndDefaults 或者使用其他选择器
        &[stroke]:not([stroke="none"]) {
          stroke: @color;
        }

        &[fill]:not([fill="none"]) {
          fill: @color;
        }
      }
    }
  }
}